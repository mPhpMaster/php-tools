<?php
namespace [% namespace %];

[% use_command_placeholder %]

use Exception;
//use App\Models\Auth\User;
//use App\Utilities\Import;
//use App\Utilities\ImportFile;
use Illuminate\Support\Collection;

class [% controller_name %] extends Controller
{
    [% constructor %]

    /**
     * Display a listing of the [% model_name_plural %].
     *
     * @return Response
     */
    public function index() {
        $[% model_name_plural_variable %] = [% model_name_class %]::[% with_relations_for_index %]paginate([% models_per_page %]);

        return view('[% index_view_name %]'[% view_variables_for_index %]);
    }

    /**
     * Show the form for creating a new [% model_name %].
     *
     * @return Response
     */
    public function create() {
        [% relation_collections %]

        // ::enabled()->pluck('name', 'id');

        return view('[% create_view_name %]'[% view_variables_for_create %]);
    }

    /**
     * Store a new [% model_name %] in the storage.
     *
     * @param [% request_fullname %] [% request_variable %]
     *
     * @return Response
     */
    public function store([% type_hinted_request_name %]) {
        try {
            [% call_affirm %]
            $[% data_variable %] = [% call_get_data %];
            [% on_store_setter %]
            [% model_name_class %]::create($[% data_variable %]);

            flash([% model_was_added %])->success();
            return redirect()->route('[% index_route_name %]')
                ->with('success_message', [% model_was_added %]);

        } catch (Exception $exception) {

            flash([% unexpected_error %])->error();
            return back()->withInput()
                ->withErrors(['unexpected_error' => [% unexpected_error %]]);
        }
    }

    /**
     * Display the specified [% model_name %].
     *
     * @param [% model_name_class %] $model
     *
     * @return Response
     */
    public function show([% model_name_class %] $model) {
        $[% model_name_singular_variable %] = $model;

        return view('[% show_view_name %]'[% view_variables_for_show %]);
    }

    /**
     * Show the form for editing the specified [% model_name %].
     *
     * @param [% model_name_class %] $model
     *
     * @return Response
     */
    public function edit([% model_name_class %] $model) {
        $[% model_name_singular_variable %] = $model;
        [% relation_collections %]

        return view('[% edit_view_name %]'[% view_variables_for_edit %]);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  [% model_name_class %] $model
     * @param  [% type_hinted_request_name %]
     *
     * @return Response
     */
    public function update([% model_name_class %] $model, [% type_hinted_request_name %]) {
        try {
            [% call_affirm %]
            $[% data_variable %] = [% call_get_data %];
            [% on_update_setter %]
            $model->update($[% data_variable %]);

            flash([% model_was_updated %])->success();
            return redirect()->route('[% index_route_name %]')
                ->with('success_message', [% model_was_updated %]);

        } catch (Exception $exception) {

            flash([% unexpected_error %])->error();
            return back()->withInput()
                ->withErrors(['unexpected_error' => [% unexpected_error %]]);
        }
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  [% model_name_class %]  $model
     *
     * @return Response
     */
    public function destroy([% model_name_class %] $model) {
        try {
            $model->delete();

            flash([% model_was_deleted %])->success();
            return redirect()->route('[% index_route_name %]')
                ->with('success_message', [% model_was_deleted %]);

        } catch (Exception $exception) {

            flash([% unexpected_error %])->warning();
            return back()->withInput()
                ->withErrors(['unexpected_error' => [% unexpected_error %]]);
        }
    }


    /**
     * Duplicate the specified resource.
     *
     * @param  [% model_name_class %]  $model
     *
     * @return Response
     */
    public function duplicate([% model_name_class %] $model)
    {
        $clone = $model->duplicate();

        flash([% model_was_added %])->success();
            return redirect()->route('[% edit_route_name %]', $clone->id)
                    ->with('success_message', [% model_was_added %]);
    }

[% affirm_method %]
[% get_data_method %]
[% upload_method %]

    /**
     * Import the specified resource.
     *
     * @param  ImportFile  $import
     *
     * @return Response
     */
    /*
    public function import(ImportFile $import)
    {
        if (!Import::createFromFile($import, [% namespace %])) {
            return redirect()->route('[% index_route_name %]');
        }

        $message = trans('messages.success.imported');
        flash($message)->success();

        return redirect()->route('[% index_route_name %]');
    }*/


    /**
     * Export the specified resource.
     *
     * @return Response
     */
    /*
    public function export() {
        \Excel::create('[% model_name_singular_variable %]', function($excel) {
            $excel->sheet('[% model_name_singular_variable %]', function($sheet) {
                $sheet->fromModel([% model_name_class %]::filter(request()->input())->get()->makeHidden([
                    'id', 'created_at', 'updated_at', 'deleted_at'
                ]));
            });
        })->download('xlsx');
    }*/

}
